




CREATE TABLE USERSGROUPS (GROUP_ID INTEGER NOT NULL, USER_ID INTEGER NOT NULL, PRIMARY KEY (GROUP_ID, USER_ID));
CREATE TABLE USERS (ID INTEGER NOT NULL, FIRSTNAME VARCHAR, LASTNAME VARCHAR, USERID VARCHAR, PRIMARY KEY (ID));
CREATE TABLE PRESENTATIONINFORMATION (ID INTEGER NOT NULL, DESCRIPTION LONGVARBINARY, SUBJECT VARCHAR, TITLE VARCHAR, HUMANTASKMODEL_ID INTEGER, PRIMARY KEY (ID));
CREATE TABLE PEOPLEQUERYARGUMENT (ID INTEGER NOT NULL, EXPRESSION LONGVARBINARY, LPGARGUMENT INTEGER, PEOPLEQUERY INTEGER, PRIMARY KEY (ID));
CREATE TABLE PEOPLEQUERY (ID INTEGER NOT NULL, HUMANROLE VARCHAR, HUMANTASKMODEL_ID INTEGER, LPG INTEGER, PRIMARY KEY (ID));
CREATE TABLE LPG_ARGUMENTDEF (ID INTEGER NOT NULL, NAME VARCHAR, LPG INTEGER, PRIMARY KEY (ID));
CREATE TABLE LOGICALPEOPLEGROUPDEF (ID INTEGER NOT NULL, NAME VARCHAR, PRIMARY KEY (ID));
CREATE TABLE LITERAL (ID INTEGER NOT NULL, ENTITYIDENTIFIER VARCHAR, HUMANROLE VARCHAR, HUMANTASKMODEL_ID INTEGER, PRIMARY KEY (ID));
CREATE TABLE HUMANTASKMODEL (ID INTEGER NOT NULL, ACTIVATIONTIME LONGVARBINARY, COMPLETEBY LONGVARBINARY, DURATIONAVG LONGVARBINARY, DURATIONMAX LONGVARBINARY, DURATIONMIN LONGVARBINARY, FAULTSCHEMA LONGVARBINARY, INPUTSCHEMA LONGVARBINARY, NAME VARCHAR, OUTPUTSCHEMA LONGVARBINARY, POSITIONX LONGVARBINARY, POSITIONY LONGVARBINARY, PRIORITY LONGVARBINARY, QUERYPROPERTY1 LONGVARBINARY, QUERYPROPERTY1NAME VARCHAR, QUERYPROPERTY2 LONGVARBINARY, QUERYPROPERTY2NAME VARCHAR, QUERYPROPERTY3 LONGVARBINARY, QUERYPROPERTY3NAME VARCHAR, QUERYPROPERTY4 LONGVARBINARY, QUERYPROPERTY4NAME VARCHAR, SKIPABLE LONGVARBINARY, STARTBY LONGVARBINARY, PRIMARY KEY (ID));
CREATE TABLE HUMANTASKINSTANCE (ID INTEGER NOT NULL, ACTIVATIONTIME TIMESTAMP, COMPLETEBY TIMESTAMP, CONTEXTID VARCHAR, CREATEDON TIMESTAMP, DURATIONAVG BIGINT, DURATIONMAX BIGINT, DURATIONMIN BIGINT, EXPIRATIONTIME TIMESTAMP, FAULTDATA LONGVARBINARY, FAULTNAME VARCHAR, INPUTDATA LONGVARBINARY, NAME VARCHAR, OUTPUTDATA LONGVARBINARY, POSITIONX DOUBLE, POSITIONY DOUBLE, PRESENTATIONDESCRIPTION LONGVARBINARY, PRESENTATIONNAME VARCHAR, PRESENTATIONSUBJECT VARCHAR, PRIORITY INTEGER, QUERYPROPERTY1 VARCHAR, QUERYPROPERTY1NAME VARCHAR, QUERYPROPERTY2 VARCHAR, QUERYPROPERTY2NAME VARCHAR, QUERYPROPERTY3 DOUBLE, QUERYPROPERTY3NAME VARCHAR, QUERYPROPERTY4 DOUBLE, QUERYPROPERTY4NAME VARCHAR, SKIPABLE SMALLINT, STARTBY TIMESTAMP, STATUS VARCHAR, SUSPENDUNTIL TIMESTAMP, TASKPARENTID VARCHAR, MODELID INTEGER, PRIMARY KEY (ID));
CREATE TABLE GROUPS (ID INTEGER NOT NULL, GROUPNAME VARCHAR, PRIMARY KEY (ID));
CREATE TABLE WORKITEM (ID INTEGER NOT NULL, CLAIMED SMALLINT, CREATIONTIME TIMESTAMP, EVERYBODY SMALLINT, GENERICHUMANROLE VARCHAR, TIID INTEGER, ASSIGNEE INTEGER, PRIMARY KEY (ID));
CREATE TABLE CALLBACKCORRELATIONPROPERTY (ID INTEGER NOT NULL, NAME VARCHAR, VALUE LONGVARBINARY, TIID INTEGER, PRIMARY KEY (ID));
CREATE TABLE ATTACHMENT (ID INTEGER NOT NULL, ACCESSTYPE VARCHAR, ATTACHEDAT TIMESTAMP, CONTENTTYPE VARCHAR, NAME VARCHAR, VALUE LONGVARBINARY, TIID INTEGER, ATTACHEDBY INTEGER, PRIMARY KEY (ID));
CREATE TABLE ASSIGNEDUSER (ID INTEGER NOT NULL, USERID VARCHAR UNIQUE, PRIMARY KEY (ID));
CREATE TABLE STRUCTUREDATA (ID INTEGER NOT NULL, HASCONTROLLEDTASKS BOOLEAN, HASSUBTASKS BOOLEAN, LOCKCOUNTER INTEGER, NAME VARCHAR, STRUCTURENR INTEGER, STRUCTURE_ID INTEGER, SUSPENDCOUNTER INTEGER, TASK_ID INTEGER, MERGETASK_ID INTEGER, PARENTTASK_ID INTEGER, PRIMARY KEY (ID));
CREATE TABLE AUDITENTRY (EVENTID BIGINT NOT NULL, ACTUALOWNER VARCHAR, EACTION VARCHAR, EVENTTIMESTAMP TIMESTAMP, HASCONTROLLEDTASKS BOOLEAN, HASSUBTASKS BOOLEAN, OLDSTATE VARCHAR, ORGINATORISBUSINESSADMINISTRATOR BOOLEAN, ORIGINATOR VARCHAR, ORIGINATORISPOWNER BOOLEAN, ORIGINATORISSTAKEHOLDER BOOLEAN, STATE VARCHAR, TASKINITIATOR VARCHAR, TASKINSTANCENAME VARCHAR, TASKMODELNAME VARCHAR, TIID BIGINT, TMID BIGINT, TRANSACTIONID BIGINT, PRIMARY KEY (EVENTID));
ALTER TABLE USERSGROUPS ADD CONSTRAINT FK_USERSGROUPS_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS (ID);
ALTER TABLE PRESENTATIONINFORMATION ADD CONSTRAINT FK_PRESENTATIONINFORMATION_HUMANTASKMODEL_ID FOREIGN KEY (HUMANTASKMODEL_ID) REFERENCES HUMANTASKMODEL (ID);
ALTER TABLE PEOPLEQUERYARGUMENT ADD CONSTRAINT FK_PEOPLEQUERYARGUMENT_LPGARGUMENT FOREIGN KEY (LPGARGUMENT) REFERENCES LPG_ARGUMENTDEF (ID);
ALTER TABLE PEOPLEQUERYARGUMENT ADD CONSTRAINT FK_PEOPLEQUERYARGUMENT_PEOPLEQUERY FOREIGN KEY (PEOPLEQUERY) REFERENCES PEOPLEQUERY (ID);
ALTER TABLE PEOPLEQUERY ADD CONSTRAINT FK_PEOPLEQUERY_HUMANTASKMODEL_ID FOREIGN KEY (HUMANTASKMODEL_ID) REFERENCES HUMANTASKMODEL (ID);
ALTER TABLE PEOPLEQUERY ADD CONSTRAINT FK_PEOPLEQUERY_LPG FOREIGN KEY (LPG) REFERENCES LOGICALPEOPLEGROUPDEF (ID);
ALTER TABLE LPG_ARGUMENTDEF ADD CONSTRAINT FK_LPG_ARGUMENTDEF_LPG FOREIGN KEY (LPG) REFERENCES LOGICALPEOPLEGROUPDEF (ID);
ALTER TABLE LITERAL ADD CONSTRAINT FK_LITERAL_HUMANTASKMODEL_ID FOREIGN KEY (HUMANTASKMODEL_ID) REFERENCES HUMANTASKMODEL (ID);
ALTER TABLE HUMANTASKINSTANCE ADD CONSTRAINT FK_HUMANTASKINSTANCE_MODELID FOREIGN KEY (MODELID) REFERENCES HUMANTASKMODEL (ID);
ALTER TABLE WORKITEM ADD CONSTRAINT FK_WORKITEM_ASSIGNEE FOREIGN KEY (ASSIGNEE) REFERENCES ASSIGNEDUSER (ID);
ALTER TABLE WORKITEM ADD CONSTRAINT FK_WORKITEM_TIID FOREIGN KEY (TIID) REFERENCES HUMANTASKINSTANCE (ID);
ALTER TABLE CALLBACKCORRELATIONPROPERTY ADD CONSTRAINT FK_CALLBACKCORRELATIONPROPERTY_TIID FOREIGN KEY (TIID) REFERENCES HUMANTASKINSTANCE (ID);
ALTER TABLE ATTACHMENT ADD CONSTRAINT FK_ATTACHMENT_ATTACHEDBY FOREIGN KEY (ATTACHEDBY) REFERENCES ASSIGNEDUSER (ID);
ALTER TABLE ATTACHMENT ADD CONSTRAINT FK_ATTACHMENT_TIID FOREIGN KEY (TIID) REFERENCES HUMANTASKINSTANCE (ID);
ALTER TABLE STRUCTUREDATA ADD CONSTRAINT FK_STRUCTUREDATA_PARENTTASK_ID FOREIGN KEY (PARENTTASK_ID) REFERENCES STRUCTUREDATA (ID);
ALTER TABLE STRUCTUREDATA ADD CONSTRAINT FK_STRUCTUREDATA_MERGETASK_ID FOREIGN KEY (MERGETASK_ID) REFERENCES STRUCTUREDATA (ID);
CREATE TABLE SEQUENCE (SEQ_NAME VARCHAR(50) NOT NULL, SEQ_COUNT NUMERIC(38), PRIMARY KEY (SEQ_NAME));
INSERT INTO SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('SEQ_GEN', 0);

create view WorkItemTaskView(
        tiid, wiid, createdOn, assignee, assignedToEverybody, genericHumanRole, isClaimed,
        taskInstanceName, taskModelId, status, priority, isSkipable, taskCreatedOn, activatedOn, expiresOn, startBy, completeBy,
        suspendUntil, presentationName, presentationSubject, presentationDescription,
        inputData, outputData, faultName, faultData)
as select ti.id, wi.id, wi.creationTime, au.userId, wi.everybody, wi.genericHumanRole, wi.claimed, ti.name, ti.modelId, ti.status, ti.priority, ti.skipable, ti.createdOn, ti.activationTime, ti.expirationTime, ti.startBy,ti.completeBy,
ti.suspendUntil, ti.presentationName, ti.presentationSubject, ti.presentationDescription, ti.inputData, ti.outputData, ti.faultName, ti.faultData
from HumanTaskInstance ti, WorkItem wi, Assigneduser au where ti.id = wi.tiid and au.id = wi.assignee;
